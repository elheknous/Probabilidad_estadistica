no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
pbinom(10,30,p)
pbinom(10,30,p)
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
pbinom(10,30,p)
n1 = ceiling(dim(base_datosNO2)[1]*0.3)
lambdas = NULL
for (i in 1:100) {
sample.aux = base_datosNO2 %>%  slice(sample(1:dim(base_datosNO2)[1],size=n1)) %>%
group_by(hour) %>% dplyr::summarise(tasa = sum(NO2_alto))
tasa.aux = mean(sample.aux$tasa)
lambdas = c(lambdas,tasa.aux)
}
lambda = ceiling(mean(lambdas))
lambda
1 - dpois(5,6)
1 - dpois(5,6)
n1 = ceiling(dim(base_datosNO2)[1]*0.3)
lambdas = NULL
for (i in 1:100) {
sample.aux = base_datosNO2 %>%  slice(sample(1:dim(base_datosNO2)[1],size=n1)) %>%
group_by(hour) %>% dplyr::summarise(tasa = sum(NO2_alto))
tasa.aux = mean(sample.aux$tasa)
lambdas = c(lambdas,tasa.aux)
}
lambda = ceiling(mean(lambdas))
lambda
1 - dpois(5,6)
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 125,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 125,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 125,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 125,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 125,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 125,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 125,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 125,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 20,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 20,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
dnbinom(10,2,p)
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 20,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
dnbinom(15,10,p)
dnbinom(30,10,p)
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 20,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
dnbinom(30,10,p)
dnbinom(50,10,p)
dnbinom(15,10,p)
dnbinom(10,10,p)
dnbinom(6,10,p)
dnbinom(15,5,p)
dnbinom(50,5,p)
dnbinom(20,5,p)
dnbinom(30,5,p)
dnbinom(40,5,p)
dnbinom(10,5,p)
dnbinom(8,5,p)
dnbinom(5,10,p)
dnbinom(10,10,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
dnbinom(10,5,p)
library(dplyr)
library(ggplot2)
library(readxl)
library(moments)
library(tidyverse)
library(nortest)
library(gridExtra)
base_datos <- read_excel("C:/Users/jose/Downloads/MATUS_TORO_JOSE (1).xlsx")
cajaNo2 = base_datos %>%
ggplot(aes(y=NO2)) +
geom_boxplot() +
coord_flip()
no2modificado = base_datos %>% filter(NO2 < 142) %>%
ggplot(aes(y=NO2)) +
geom_boxplot() +
coord_flip()
grid.arrange(cajaNo2,no2modificado)
datos_atipicos = base_datos %>% filter(NO2 > 142)
nrow(base_datos) - (nrow(base_datos) - nrow(datos_atipicos))
no2modificado = base_datos %>% filter(NO2 < 142)
no2 = no2modificado
base_datosNO2 = no2 %>%
mutate(NO2_alto = ifelse(NO2 >= 70,1,0))
probs = NULL
n1 = round(length(base_datosNO2$NO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosNO2$NO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
pbinom(10,30,p)
n1 = ceiling(dim(base_datosNO2)[1]*0.3)
lambdas = NULL
for (i in 1:100) {
sample.aux = base_datosNO2 %>%  slice(sample(1:dim(base_datosNO2)[1],size=n1)) %>%
group_by(hour) %>% dplyr::summarise(tasa = sum(NO2_alto))
tasa.aux = mean(sample.aux$tasa)
lambdas = c(lambdas,tasa.aux)
}
lambda = ceiling(mean(lambdas))
lambda
1 - dpois(5,6)
cajaSo2 = base_datos %>%
ggplot(aes(y=SO2)) +
geom_boxplot() +
coord_flip()
so2modificado = base_datos %>% filter(SO2 < 36) %>%
ggplot(aes(y=SO2)) +
geom_boxplot() +
coord_flip()
grid.arrange(cajaSo2,so2modificado)
base_datos = base_datos
datos_atipicos = base_datos %>% filter(SO2 > 36)
nrow(base_datos) - (nrow(base_datos) - nrow(datos_atipicos))
base_datosSO2 = base_datos %>%
mutate(SO2_alto = ifelse(SO2 >= 20,1,0))
probs = NULL
n1 = round(length(base_datosSO2$SO2)*0.2,0)
for (i in 1:1000) {
sample.aux = base_datosSO2$SO2_alto %>% sample(n1,replace=F)
probs = c(probs,mean(sample.aux))
}
p = mean(probs)
p
dnbinom(10,5,p)
no2 = base_datos$NO2
no2modificado = (base_datos %>% filter(NO2 < 142))$NO2
no2 = no2modificado
fw <-fitdist(no2,"weibull")
library(dplyr)
library(ggplot2)
library(readxl)
library(moments)
library(tidyverse)
library(nortest)
library(gridExtra)
library(fitdistrplus)
no2 = base_datos$NO2
no2modificado = (base_datos %>% filter(NO2 < 142))$NO2
no2 = no2modificado
fw <-fitdist(no2,"weibull")
fln<-fitdist(no2,"lnorm")
fg <-fitdist(no2,"gamma")
fn <-fitdist(no2,"norm")
fe <-fitdist(no2,"exp")
# fb <-fitdist(no2,"beta") no se mueve entre 0 y 1
plot.legend<-c("Weibull","LogNormal","Gamma","Normal","Exponencial")
denscomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
qqcomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
cdfcomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
ppcomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
no2 = base_datos$NO2
no2modificado = (base_datos %>% filter(NO2 < 142))$NO2
no2 = no2modificado
fw <-fitdist(no2,"weibull")
fln<-fitdist(no2,"lnorm")
fg <-fitdist(no2,"gamma")
fn <-fitdist(no2,"norm")
fe <-fitdist(no2,"exp")
# fb <-fitdist(no2,"beta") no se mueve entre 0 y 1
plot.legend<-c("Weibull","LogNormal","Gamma","Normal","Exponencial")
denscomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
qqcomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
cdfcomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
ppcomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
gofstat(list(fg,fn,fln,fw,fe))
ks.test(no2,"pweibull",shape=fw$estimate[1],scale=fw$estimate[2])
ks.test(no2,"pnorm",fn$estimate[1],fn$estimate[2])
ks.test(no2,"pweibull",shape=fw$estimate[1],scale=fw$estimate[2])
ks.test(no2,"pnorm",fn$estimate[1],fn$estimate[2])
SO2 = base_datos$SO2
SO2
fw <-fitdist(SO2,"weibull")
SO2 = base_datos$SO2
fw <-fitdist(SO2,"weibull")
fln<-fitdist(SO2,"lnorm")
fg <-fitdist(SO2,"gamma")
fn <-fitdist(SO2,"norm")
fe <-fitdist(SO2,"exp")
# fb <-fitdist(no2,"beta") no se mueve entre 0 y 1
plot.legend<-c("Weibull","LogNormal","Gamma","Normal","Exponencial")
denscomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
qqcomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
cdfcomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
ppcomp(list(fw,fln,fg,fn,fe), legendtext=plot.legend)
gofstat(list(fg,fn,fln,fw,fe))
gofstat(list(fg,fn,fln,fw))
gofstat(list(fg,fln,fw,fe))
ks.test(no2,"pnorm",fn$estimate[1],fn$estimate[2]) ##MAYOR QUE GAMMA 0.03113
ks.test(no2,"pnorm",mean = fn$estimate[1],sd = fn$estimate[2]) ##MAYOR QUE GAMMA 0.03113
ks.test(SO2,"plnorm",meanlog=fln$estimate[1],sdlog=fln$estimate[2])
